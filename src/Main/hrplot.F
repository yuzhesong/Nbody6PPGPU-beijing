      SUBROUTINE HRPLOT
*
*
*       HR diagnostics of evolving stars.
*       ---------------------------------
*
      INCLUDE 'common6.h'
      COMMON/BINARY/  CM(4,MMAX),XREL(3,MMAX),VREL(3,MMAX),
     &                HM(MMAX),UM(4,MMAX),UMDOT(4,MMAX),TMDIS(MMAX),
     &                NAMEM(MMAX),NAMEG(MMAX),KSTARM(MMAX),IFLAG(MMAX)
      INTEGER KWP
      REAL*8  LUMS(10),TSCLS(20),GB(10)
      REAL*8  M0,M1,M2,LUM,LUM2,MC,ME,K2,K3
      PARAMETER(K3=0.21d0)
      REAL*8  OSPIN1,OSPIN2,DJSPIN1,DJSPIN2
      CHARACTER*27 FILE(2)
      CHARACTER*20 TCHAR
*
*     Save SSE and BSE data in separate files splited by time
      if(rank.eq.0) then
         call string_left(TCHAR,TTOT,DTPLOT)
         write(FILE(1),118) TCHAR
 118     format('sev.83_',A20)
         write(FILE(2),119) TCHAR
 119     format('bev.82_',A20)
         OPEN (UNIT=83,STATUS='UNKNOWN',FORM='FORMATTED',FILE=FILE(1))
         OPEN (UNIT=82,STATUS='UNKNOWN',FORM='FORMATTED',FILE=FILE(2))
      end if
*      
      if(rank.eq.0) WRITE (82,1)  NPAIRS, TPHYS
    1 FORMAT (I8,F9.1)
      NS = N - 2*NPAIRS
      IMERGE = 0
      if(rank.eq.0) WRITE (83,1)  NS, TPHYS
*
      if(rank.eq.0) WRITE(83,102)NC,RC,RBAR,RTIDE,(RDENS(K),K=1,3)
      if(rank.eq.0) WRITE(83,103)ZMBAR,MIN(TURN,99.999),RSCALE
 102  FORMAT(I8,3F6.2,3F10.5)
 103  FORMAT(F12.4,2F6.2)
*
      DO 20 I = 1,N
          M0 = BODY0(I)*ZMBAR
          M1 = BODY(I)*ZMBAR
*       Replace ghost mass of single star with original value from merged KS.
          IF (M1.EQ.0.0.AND.I.GE.IFIRST) THEN
              IM = 0
*       Search merger table for ghost to identify corresponding index.
              DO 2 K = 1,NMERGE
                  IF (NAMEG(K).EQ.NAME(I)) THEN
                      IM = K
                  END IF
    2         CONTINUE
*       Skip any ghosts associated with chain regularization.
              IF (IM.EQ.0) THEN
                  if(rank.eq.0)
     &            WRITE (6,3)  I, NAME(I), BODY(I), M0, M1, NCH
    3     FORMAT (' WARNING! HRPLOT I NM M M0 M1 NCH ',2I8,1P,3E15.7,I3)
                  GO TO 20
              END IF
              M1 = CM(2,IM)*ZMBAR
          END IF
*
*       Obtain stellar parameters at current epoch.
          KW = KSTAR(I)
          AGE = MAX(TPLOT,TEV0(I))*TSTAR - EPOCH(I)
          MC = 0.D0
          CALL STAR(KW,M0,M1,TM,TN,TSCLS,LUMS,GB,ZPARS)
          CALL HRDIAG(M0,AGE,M1,TM,TN,TSCLS,LUMS,GB,ZPARS,
     &                RM,LUM,KW,MC,RCC,ME,RE,K2)
          if(kw.eq.15)then
             if(rank.eq.0)then 
                write(6,*)' HRPLOT15 ',
     &                    i,name(i),kstar(i),age,tphys
             endif
             STOP
          endif
          IF (I.LT.IFIRST) THEN
              JPAIR = KVEC(I)
              J2 = 2*JPAIR
              IF (I.EQ.J2) GO TO 20
              J1 = 2*JPAIR - 1
              ICM = N + JPAIR
              M2 = BODY(J2)*ZMBAR
              RI = (X(1,ICM) - RDENS(1))**2 + (X(2,ICM) - RDENS(2))**2 +
     &                                        (X(3,ICM) - RDENS(3))**2
* RSp Debugging June 2020
*         if(rank.eq.0.and.(kstar(j1).ge.10.or.kstar(j2).ge.10))
*    & WRITE(6,556)TTOT,J1,J2,ICM,NAME(J1),NAME(J2),NAME(ICM),KSTAR(J1),
*    &      KSTAR(J2),KSTAR(ICM),BODY(J1)*ZMBAR,BODY(J2)*ZMBAR,
*    &         BODY0(J1)*ZMBAR,BODY0(J2)*ZMBAR,KW,M1,M2
*556  FORMAT(1X,'1 HRPLOT: T=',1P,E13.5,' J1/2/ICM,N1/2/ICM,KST1/2/ICM='
*    & ,6I10,3I4,' BODY1/2/BODY01/2=',4E13.5,' KW=',I4,
*    &        ' M1/2(*): ',3E13.5)
*       Check for ghost binary.
              IF (M1.EQ.0.0) THEN
                  IM = 0
*       Search merger table to identify corresponding index of c.m. name.
                  DO 4 K = 1,NMERGE
                      IF (NAMEM(K).EQ.NAME(ICM)) THEN
                          IM = K
                      END IF
    4             CONTINUE
                  IF (IM.EQ.0) GO TO 20
*       Copy masses and obtain evolution parameters for first component.
                  M1 = CM(3,IM)*ZMBAR
                  M2 = CM(4,IM)*ZMBAR
                  KW = KSTAR(J1)
                  AGE = MAX(TPLOT,TEV0(J1))*TSTAR - EPOCH(J1)
                  MC = 0.D0
                  CALL STAR(KW,M0,M1,TM,TN,TSCLS,LUMS,GB,ZPARS)
                  CALL HRDIAG(M0,AGE,M1,TM,TN,TSCLS,LUMS,GB,ZPARS,
     &                        RM,LUM,KW,MC,RCC,ME,RE,K2)
              END IF
              RJ = R(JPAIR)
              HJ = H(JPAIR)
              RDOT = TDOT2(JPAIR)
*       Determine merger & ghost index for negative c.m. name.
              IF (NAME(N+JPAIR).LT.0) THEN
                  CALL FINDJ(J1,J,IMERGE)
*       Skip second binary of quadruple.
                  IF (NAME(J).GT.NZERO) GO TO 20
                  M1 = CM(1,IMERGE)*ZMBAR
                  M2 = CM(2,IMERGE)*ZMBAR
                  HJ = HM(IMERGE)
                  RJ = SQRT(XREL(1,IMERGE)**2 + XREL(2,IMERGE)**2 +
     &                                          XREL(3,IMERGE)**2)
                  RDOT = XREL(1,IMERGE)*VREL(1,IMERGE) + 
     &                 XREL(2,IMERGE)*VREL(2,IMERGE) +
     &                 XREL(3,IMERGE)*VREL(3,IMERGE)
*       Re-define index of second component and obtain parameters of M1.
                  J2 = J
                  AGE = MAX(TPLOT,TEV0(J1))*TSTAR - EPOCH(J1)
                  KW = KSTAR(J1)
                  MC = 0.D0
                  CALL STAR(KW,M0,M1,TM,TN,TSCLS,LUMS,GB,ZPARS)
                  CALL HRDIAG(M0,AGE,M1,TM,TN,TSCLS,LUMS,GB,ZPARS,
     &                        RM,LUM,KW,MC,RCC,ME,RE,K2)
              END IF
*
              OSPIN1 = MAX(SPIN(J1)*SPNFAC,1.0D-10)/
     &                    (K2*RM*RM*(M1-MC)+K3*RCC*RCC*MC)
*
              M0 = BODY0(J2)*ZMBAR
              KW2 = KSTAR(J2)
              AGE = MAX(TPLOT,TEV0(J2))*TSTAR - EPOCH(J2)
              MC = 0.D0
              CALL STAR(KW2,M0,M2,TM,TN,TSCLS,LUMS,GB,ZPARS)
              CALL HRDIAG(M0,AGE,M2,TM,TN,TSCLS,LUMS,GB,ZPARS,
     &                    RM2,LUM2,KW2,MC,RCC,ME,RE,K2)
              RI = SQRT(RI)/RC
*       Specify relevant binary mass.
              IF (BODY(J1).GT.0.0D0) THEN
                  BODYI = (M1 + M2)/ZMBAR
              ELSE
                  BODYI = CM(3,IMERGE) + CM(4,IMERGE)
              END IF
              SEMI = -0.5*BODYI/HJ
              ECC2 = (1.0 - RJ/SEMI)**2 + RDOT**2/(BODYI*SEMI)
              ECC = SQRT(ECC2)
              PB = DAYS*SEMI*SQRT(ABS(SEMI)/BODYI)
              PB = LOG10(ABS(PB))
              SEMI = LOG10(ABS(SEMI*SU))
              R1 = LOG10(RM)
              R2 = LOG10(RM2)
              ZL1 = LOG10(LUM)
              ZL2 = LOG10(LUM2)
*             TE1 = 0.25*(ZL1 - 2.0*R1) + 3.7
*             TE2 = 0.25*(ZL2 - 2.0*R2) + 3.7
              TE1 = 0.25*(ZL1 - 2.0*R1) + 3.761777537508
              TE2 = 0.25*(ZL2 - 2.0*R2) + 3.761777537508
* RSp Debugging June 2020
*             if(rank.eq.0.and.(kstar(j1).ge.10.or.kstar(j2).ge.10))
*    & WRITE(6,555)TTOT,J1,J2,ICM,NAME(J1),NAME(J2),NAME(ICM),KSTAR(J1),
*    &      KSTAR(J2),KSTAR(ICM),BODY(J1)*ZMBAR,BODY(J2)*ZMBAR,
*    &         BODY0(J1)*ZMBAR,BODY0(J2)*ZMBAR,KW2,M1,M2
*555  FORMAT(1X,'2 HRPLOT: T=',1P,E13.5,' J1/2/ICM,N1/2/ICM,KST1/2/ICM='
*    & ,6I10,3I4,' BODY1/2/BODY01/2=',4E13.5,' KW2=',I4,
*    &        ' M1/2(*): ',3E13.5)
*
              AGE1 = MAX(TPLOT,TEV0(J1))*TSTAR - EPOCH(J1)
              AGE2 = MAX(TPLOT,TEV0(J2))*TSTAR - EPOCH(J2)
*
              OSPIN2 = MAX(SPIN(J2)*SPNFAC,1.0D-10)/
     &                    (K2*RM*RM*(M1-MC)+K3*RCC*RCC*MC)
              KWP = MIN(KSTAR(ICM),99)
*
*   PRINT ECCENTRICITY HERE
*              write(6,*)' ECC_HRPLOT ',   ECC

              if(rank.eq.0)
*    &        WRITE (82,5)  TTOT, J1, J2, NAME(J1), NAME(J2), KW, KW2, 
*    &          KSTAR(ICM),
*    &          RI, ECC, PB, SEMI, M1, M2, ZL1, ZL2, R1, R2, TE1, TE2,
*    &          AGE1, AGE2, EPOCH(J1), EPOCH(J2)
*   5         FORMAT (1X,1P,E13.5,4I8,2I3,I4,6E13.5,10E13.5)

     &        WRITE (82,123) J1,J2,NAME(J1),NAME(J2),KW,KW2,KWP,
     &            ECC,PB,SEMI,M1,M2,ZL1,ZL2,R1,R2,
     &            (X(K,ICM),K=1,3),(XDOT(K,ICM),K=1,3),
     &            EPOCH(J1),EPOCH(J2),OSPIN1,OSPIN2
 123   FORMAT(4I7,2I3,I4,F6.3,F10.2,7F8.3,1P,6E14.6,0P,2F12.3,1P,2E12.4)
          ELSE
*       Create output file for single stars (skip chain subsystem or ghost).
              IF (NAME(I).EQ.0.OR.BODY(I).EQ.0.0D0) GO TO 20
              RI = (X(1,I) - RDENS(1))**2 + (X(2,I) - RDENS(2))**2 +
     &                                      (X(3,I) - RDENS(3))**2
              RI = SQRT(RI)/RC
              R1 = LOG10(RM)
              ZL1 = LOG10(LUM)
*       Form LOG(Te) using L = 4*pi*R**2*\sigma*T**4 and solar value 3.7.
ccc              TE = 0.25*(ZL1 - 2.0*R1) + 3.7

* correct value: lg(5778 K) = 3.761777537508

              TE = 0.25*(ZL1 - 2.0*R1) + 3.761777537508
              OSPIN1 = MAX(SPIN(I)*SPNFAC,1.0D-10)/
     &                    (K2*RM*RM*(M1-MC)+K3*RCC*RCC*MC)
              AGE = MAX(TPLOT,TEV0(I))*TSTAR - EPOCH(I)
              if(rank.eq.0)
*    &        WRITE (83,10)  TTOT, I, NAME(I), KW, RI, M1, ZL1, R1, TE,
*    &        AGE, EPOCH(I)
*  10         FORMAT (1X,1P,E13.5,2I8,I3,7E13.5)
     &        WRITE(83,121)I,NAME(I),KW,M1,ZL1,R1,
     &                (X(K,I),K=1,3),(XDOT(K,I),K=1,3),EPOCH(I),OSPIN1
  121        FORMAT(2I7,I3,3F8.3,1P,6E14.6,0P,F12.3,1P,E12.4)
          END IF
   20 CONTINUE
*
      if(rank.eq.0) then
         CALL FLUSH(82)
         CALL FLUSH(83)
         CLOSE(82)
         CLOSE(83)
      end if
*
      RETURN
*
      END
